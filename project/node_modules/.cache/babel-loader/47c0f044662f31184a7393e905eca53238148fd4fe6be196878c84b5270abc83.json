{"ast":null,"code":"var _jsxFileName = \"/home/lillian/Development/code/phase-5/s-harbor/project/src/components/Newsletter.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\n//figure out how to send email confirmation of signup to user\n//need to include PATCH and DELETE features\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction NewsletterSignup() {\n  _s();\n  const [formData, setFormData] = useState({\n    name: '',\n    email: ''\n  });\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    //send form info to backend table(newsletter_signups)\n    fetch('/newsletter', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(formData)\n    }).then(response => response.json()).then(data => {\n      console.log(data);\n    });\n\n    // Clear the form after submission\n    setFormData({\n      name: '',\n      email: ''\n    });\n  };\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setFormData(prevFormData => ({\n      ...prevFormData,\n      [name]: value\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Newsletter Signup\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"name\",\n            value: formData.name,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Email:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            name: \"email\",\n            value: formData.email,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Subscribe\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n}\n_s(NewsletterSignup, \"xvVfwctk6RzmQAkx7VHj+igO428=\");\n_c = NewsletterSignup;\nexport default NewsletterSignup;\nvar _c;\n$RefreshReg$(_c, \"NewsletterSignup\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","NewsletterSignup","_s","formData","setFormData","name","email","handleSubmit","event","preventDefault","fetch","method","headers","body","JSON","stringify","then","response","json","data","console","log","handleChange","value","target","prevFormData","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","_c","$RefreshReg$"],"sources":["/home/lillian/Development/code/phase-5/s-harbor/project/src/components/Newsletter.js"],"sourcesContent":["import React, { useState } from 'react';\n//figure out how to send email confirmation of signup to user\n//need to include PATCH and DELETE features\nfunction NewsletterSignup() {\n    const [formData, setFormData] = useState({\n        name: '',\n        email: '',\n    });\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n\n//send form info to backend table(newsletter_signups)\n        fetch('/newsletter', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(formData),\n        })\n            .then((response) => response.json())\n            .then((data) => {\n            console.log(data);\n            });\n\n        // Clear the form after submission\n        setFormData({ name: '', email: '' });\n    };\n\n    const handleChange = (event) => {\n        const { name, value } = event.target;\n        setFormData((prevFormData) => ({\n            ...prevFormData,\n            [name]: value,\n        }));\n    };\n\n    return (\n        <div>\n            <h2>Newsletter Signup</h2>\n            <form onSubmit={handleSubmit}>\n                <div>\n                    <label>\n                        Name:\n                        <input\n                            type=\"text\"\n                            name=\"name\"\n                            value={formData.name}\n                            onChange={handleChange}\n                        />\n                    </label>\n                </div>\n\n                <div>\n                    <label>\n                        Email:\n                        <input\n                            type=\"email\"\n                            name=\"email\"\n                            value={formData.email}\n                            onChange={handleChange}\n                        />\n                    </label>\n                </div>\n\n                <button type=\"submit\">Subscribe</button>\n            </form>\n        </div>\n    );\n}\n\nexport default NewsletterSignup;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,SAASC,gBAAgBA,CAAA,EAAG;EAAAC,EAAA;EACxB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC;IACrCO,IAAI,EAAE,EAAE;IACRC,KAAK,EAAE;EACX,CAAC,CAAC;EAEF,MAAMC,YAAY,GAAIC,KAAK,IAAK;IAC5BA,KAAK,CAACC,cAAc,CAAC,CAAC;;IAE9B;IACQC,KAAK,CAAC,aAAa,EAAE;MACjBC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACZ,QAAQ;IACjC,CAAC,CAAC,CACGa,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAK;MAChBC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;IACjB,CAAC,CAAC;;IAEN;IACAf,WAAW,CAAC;MAAEC,IAAI,EAAE,EAAE;MAAEC,KAAK,EAAE;IAAG,CAAC,CAAC;EACxC,CAAC;EAED,MAAMgB,YAAY,GAAId,KAAK,IAAK;IAC5B,MAAM;MAAEH,IAAI;MAAEkB;IAAM,CAAC,GAAGf,KAAK,CAACgB,MAAM;IACpCpB,WAAW,CAAEqB,YAAY,KAAM;MAC3B,GAAGA,YAAY;MACf,CAACpB,IAAI,GAAGkB;IACZ,CAAC,CAAC,CAAC;EACP,CAAC;EAED,oBACIvB,OAAA;IAAA0B,QAAA,gBACI1B,OAAA;MAAA0B,QAAA,EAAI;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1B9B,OAAA;MAAM+B,QAAQ,EAAExB,YAAa;MAAAmB,QAAA,gBACzB1B,OAAA;QAAA0B,QAAA,eACI1B,OAAA;UAAA0B,QAAA,GAAO,OAEH,eAAA1B,OAAA;YACIgC,IAAI,EAAC,MAAM;YACX3B,IAAI,EAAC,MAAM;YACXkB,KAAK,EAAEpB,QAAQ,CAACE,IAAK;YACrB4B,QAAQ,EAAEX;UAAa;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC1B,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACP,CAAC,eAEN9B,OAAA;QAAA0B,QAAA,eACI1B,OAAA;UAAA0B,QAAA,GAAO,QAEH,eAAA1B,OAAA;YACIgC,IAAI,EAAC,OAAO;YACZ3B,IAAI,EAAC,OAAO;YACZkB,KAAK,EAAEpB,QAAQ,CAACG,KAAM;YACtB2B,QAAQ,EAAEX;UAAa;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC1B,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACP,CAAC,eAEN9B,OAAA;QAAQgC,IAAI,EAAC,QAAQ;QAAAN,QAAA,EAAC;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEd;AAAC5B,EAAA,CAlEQD,gBAAgB;AAAAiC,EAAA,GAAhBjC,gBAAgB;AAoEzB,eAAeA,gBAAgB;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}