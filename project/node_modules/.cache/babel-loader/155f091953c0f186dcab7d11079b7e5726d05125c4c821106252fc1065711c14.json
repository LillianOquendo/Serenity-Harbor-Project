{"ast":null,"code":"var Module = require('module').Module;\nvar nodePath = require('path');\nvar appModulePaths = [];\nvar old_nodeModulePaths = Module._nodeModulePaths;\nvar allowedDirs = {};\nfunction checkIfDirAllowed(from) {\n  var currentDir = from;\n  while (currentDir) {\n    if (allowedDirs[currentDir]) {\n      return true;\n    }\n    var basename = nodePath.basename(currentDir);\n    if (basename === 'node_modules') {\n      return false;\n    }\n    var parentDir = nodePath.dirname(currentDir);\n    if (parentDir === currentDir) {\n      break;\n    }\n    currentDir = parentDir;\n  }\n  return true;\n}\nModule._nodeModulePaths = function (from) {\n  var paths = old_nodeModulePaths.call(this, from);\n\n  // Only include the app module path for top-level modules\n  // that were not installed or that were explicitly allowed\n  if (checkIfDirAllowed(from)) {\n    paths = paths.concat(appModulePaths);\n  }\n  return paths;\n};\nfunction enableForDir(dir) {\n  allowedDirs[dir] = true;\n}\nfunction addPath(path, parent) {\n  // Anable app-module-path to work under any directories that are explicitly added\n  enableForDir(path);\n  function addPathHelper(targetArray) {\n    path = nodePath.normalize(path);\n    if (targetArray && targetArray.indexOf(path) === -1) {\n      targetArray.push(path);\n    }\n  }\n  path = nodePath.normalize(path);\n  if (appModulePaths.indexOf(path) === -1) {\n    appModulePaths.push(path);\n    // Enable the search path for the current top-level module\n    if (require.main) {\n      addPathHelper(require.main.paths);\n    }\n    parent = parent || module.parent;\n\n    // Also modify the paths of the module that was used to load the app-module-paths module\n    // and all of it's parents\n    while (parent && parent !== require.main) {\n      addPathHelper(parent.paths);\n      parent = parent.parent;\n    }\n  }\n}\nfunction removePath(path) {\n  function removePathHelper(targetArray) {\n    path = nodePath.normalize(path);\n    if (!targetArray) return;\n    var index = targetArray.indexOf(path);\n    if (index === -1) return;\n    targetArray.splice(index, 1);\n  }\n  var parent;\n  path = nodePath.normalize(path);\n  var index = appModulePaths.indexOf(path);\n  if (index > -1) {\n    appModulePaths.splice(index, 1);\n    // Enable the search path for the current top-level module\n    if (require.main) removePathHelper(require.main.paths);\n    parent = module.parent;\n\n    // Also modify the paths of the module that was used to load the app-module-paths module\n    // and all of it's parents\n    while (parent && parent !== require.main) {\n      removePathHelper(parent.paths);\n      parent = parent.parent;\n    }\n  }\n}\nexports.addPath = addPath;\nexports.removePath = removePath;\nexports.enableForDir = enableForDir;","map":{"version":3,"names":["Module","require","nodePath","appModulePaths","old_nodeModulePaths","_nodeModulePaths","allowedDirs","checkIfDirAllowed","from","currentDir","basename","parentDir","dirname","paths","call","concat","enableForDir","dir","addPath","path","parent","addPathHelper","targetArray","normalize","indexOf","push","main","module","removePath","removePathHelper","index","splice","exports"],"sources":["/home/lillian/node_modules/app-module-path/lib/index.js"],"sourcesContent":["var Module = require('module').Module;\nvar nodePath = require('path');\n\nvar appModulePaths = [];\nvar old_nodeModulePaths = Module._nodeModulePaths;\nvar allowedDirs = {};\n\nfunction checkIfDirAllowed(from) {\n    var currentDir = from;\n\n    while (currentDir) {\n        if (allowedDirs[currentDir]) {\n            return true;\n        }\n\n        var basename = nodePath.basename(currentDir);\n        if (basename === 'node_modules') {\n            return false;\n        }\n\n        var parentDir = nodePath.dirname(currentDir);\n        if (parentDir === currentDir) {\n            break;\n        }\n        currentDir = parentDir;\n    }\n\n    return true;\n}\n\nModule._nodeModulePaths = function(from) {\n    var paths = old_nodeModulePaths.call(this, from);\n\n    // Only include the app module path for top-level modules\n    // that were not installed or that were explicitly allowed\n    if (checkIfDirAllowed(from)) {\n        paths = paths.concat(appModulePaths);\n    }\n\n    return paths;\n};\n\nfunction enableForDir(dir) {\n    allowedDirs[dir] = true;\n}\n\nfunction addPath(path, parent) {\n    // Anable app-module-path to work under any directories that are explicitly added\n    enableForDir(path);\n\n    function addPathHelper(targetArray) {\n        path = nodePath.normalize(path);\n        if (targetArray && targetArray.indexOf(path) === -1) {\n            targetArray.push(path);\n        }\n    }\n\n    path = nodePath.normalize(path);\n\n    if (appModulePaths.indexOf(path) === -1) {\n        appModulePaths.push(path);\n        // Enable the search path for the current top-level module\n        if (require.main) {\n            addPathHelper(require.main.paths);\n        }\n\n        parent = parent || module.parent;\n\n        // Also modify the paths of the module that was used to load the app-module-paths module\n        // and all of it's parents\n        while(parent && parent !== require.main) {\n            addPathHelper(parent.paths);\n            parent = parent.parent;\n        }\n    }\n}\n\nfunction removePath(path) {\n    function removePathHelper(targetArray) {\n        path = nodePath.normalize(path);\n        if (!targetArray) return;\n        var index = targetArray.indexOf(path);\n        if (index === -1) return;\n        targetArray.splice(index, 1);\n    }\n\n    var parent;\n    path = nodePath.normalize(path);\n    var index = appModulePaths.indexOf(path);\n\n    if (index > -1) {\n        appModulePaths.splice(index, 1);\n        // Enable the search path for the current top-level module\n        if (require.main) removePathHelper(require.main.paths);\n        parent = module.parent;\n\n        // Also modify the paths of the module that was used to load the app-module-paths module\n        // and all of it's parents\n        while(parent && parent !== require.main) {\n            removePathHelper(parent.paths);\n            parent = parent.parent;\n        }\n    }\n}\n\nexports.addPath = addPath;\nexports.removePath = removePath;\nexports.enableForDir = enableForDir;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}