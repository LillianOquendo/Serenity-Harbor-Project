{"ast":null,"code":"const join = require('../src/join');\nmodule.exports = (path, ...middle) => async ctx => {\n  const full = ctx.req.subdomains.reverse().join('.');\n  if (typeof path === 'string' && path === full || path instanceof RegExp && path.test(full)) {\n    await join(middle, ctx => {\n      ctx.req.solved = true;\n      if (!ctx.res.headersSent) {\n        ctx.res.end();\n      }\n    })(ctx);\n  }\n};","map":{"version":3,"names":["join","require","module","exports","path","middle","ctx","full","req","subdomains","reverse","RegExp","test","solved","res","headersSent","end"],"sources":["/home/lillian/node_modules/server/router/sub.js"],"sourcesContent":["const join = require('../src/join');\n\nmodule.exports = (path, ...middle) => async ctx => {\n  const full = ctx.req.subdomains.reverse().join('.');\n  if (\n    (typeof path === 'string' && path === full) ||\n    (path instanceof RegExp && path.test(full))\n  ) {\n    await join(middle, ctx => {\n      ctx.req.solved = true;\n      if (!ctx.res.headersSent) {\n        ctx.res.end();\n      }\n    })(ctx);\n  }\n};\n"],"mappings":"AAAA,MAAMA,IAAI,GAAGC,OAAO,CAAC,aAAa,CAAC;AAEnCC,MAAM,CAACC,OAAO,GAAG,CAACC,IAAI,EAAE,GAAGC,MAAM,KAAK,MAAMC,GAAG,IAAI;EACjD,MAAMC,IAAI,GAAGD,GAAG,CAACE,GAAG,CAACC,UAAU,CAACC,OAAO,CAAC,CAAC,CAACV,IAAI,CAAC,GAAG,CAAC;EACnD,IACG,OAAOI,IAAI,KAAK,QAAQ,IAAIA,IAAI,KAAKG,IAAI,IACzCH,IAAI,YAAYO,MAAM,IAAIP,IAAI,CAACQ,IAAI,CAACL,IAAI,CAAE,EAC3C;IACA,MAAMP,IAAI,CAACK,MAAM,EAAEC,GAAG,IAAI;MACxBA,GAAG,CAACE,GAAG,CAACK,MAAM,GAAG,IAAI;MACrB,IAAI,CAACP,GAAG,CAACQ,GAAG,CAACC,WAAW,EAAE;QACxBT,GAAG,CAACQ,GAAG,CAACE,GAAG,CAAC,CAAC;MACf;IACF,CAAC,CAAC,CAACV,GAAG,CAAC;EACT;AACF,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}