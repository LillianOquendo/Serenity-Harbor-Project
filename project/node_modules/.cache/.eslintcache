[{"/home/lillian/Development/code/phase-5/s-harbor/project/src/index.js":"1","/home/lillian/Development/code/phase-5/s-harbor/project/src/App.js":"2","/home/lillian/Development/code/phase-5/s-harbor/project/src/reportWebVitals.js":"3","/home/lillian/Development/code/phase-5/s-harbor/project/src/components/Homepage.js":"4","/home/lillian/Development/code/phase-5/s-harbor/project/src/components/Testimonials.js":"5","/home/lillian/Development/code/phase-5/s-harbor/project/src/components/ContactPage.js":"6","/home/lillian/Development/code/phase-5/s-harbor/project/src/components/ConsultForm.js":"7","/home/lillian/Development/code/phase-5/s-harbor/project/src/components/IdAbuse.js":"8","/home/lillian/Development/code/phase-5/s-harbor/project/src/components/SafetyPlanForm.js":"9","/home/lillian/Development/code/phase-5/s-harbor/project/src/components/Newsletter.js":"10","/home/lillian/Development/code/phase-5/s-harbor/project/src/components/NavBar.js":"11","/home/lillian/Development/code/phase-5/s-harbor/project/src/components/Consultations.js":"12"},{"size":579,"mtime":1690949338671,"results":"13","hashOfConfig":"14"},{"size":2314,"mtime":1691095732965,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":1690949338671,"results":"16","hashOfConfig":"14"},{"size":8112,"mtime":1691367270679,"results":"17","hashOfConfig":"14"},{"size":2664,"mtime":1691427960376,"results":"18","hashOfConfig":"14"},{"size":574,"mtime":1691083234266,"results":"19","hashOfConfig":"14"},{"size":6435,"mtime":1691184430582,"results":"20","hashOfConfig":"14"},{"size":2199,"mtime":1690949338671,"results":"21","hashOfConfig":"14"},{"size":6745,"mtime":1691183676692,"results":"22","hashOfConfig":"14"},{"size":5468,"mtime":1691367354189,"results":"23","hashOfConfig":"14"},{"size":2454,"mtime":1691373228038,"results":"24","hashOfConfig":"14"},{"size":234,"mtime":1691083508876,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},"2mmjkg",{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"48"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/lillian/Development/code/phase-5/s-harbor/project/src/index.js",[],[],[],"/home/lillian/Development/code/phase-5/s-harbor/project/src/App.js",["65","66","67"],[],"/home/lillian/Development/code/phase-5/s-harbor/project/src/reportWebVitals.js",[],[],"/home/lillian/Development/code/phase-5/s-harbor/project/src/components/Homepage.js",["68","69"],[],"/home/lillian/Development/code/phase-5/s-harbor/project/src/components/Testimonials.js",["70","71","72","73","74","75","76","77","78","79"],[],"/home/lillian/Development/code/phase-5/s-harbor/project/src/components/ContactPage.js",["80"],[],"/home/lillian/Development/code/phase-5/s-harbor/project/src/components/ConsultForm.js",[],[],[],"/home/lillian/Development/code/phase-5/s-harbor/project/src/components/IdAbuse.js",[],[],"/home/lillian/Development/code/phase-5/s-harbor/project/src/components/SafetyPlanForm.js",["81","82","83"],[],"import React, { createContext, useContext, useEffect, useState } from \"react\";\n\nconst EmailContext = createContext();\n\n//this hook will consume the email context\nconst useEmailContext = () => useContext(EmailContext);\n\nfunction SafetyPlanForm() {\n    const [value, setValue] = useState(\"\")\n    const [safetyplans, setSafetyPlans] = useState([])\n    const [email, setEmail] = useState(\"\")\n    const [question1, setQuestion1] = useState(\"\")\n    const [question2, setQuestion2] = useState(\"\")\n    const [question3, setQuestion3] = useState(\"\")\n    const [question4, setQuestion4] = useState(\"\")\n    const [question5, setQuestion5] = useState(\"\")\n\n    useEffect(() => {\n        fetch('/generate_safety_plan')\n            .then(response => response.json())\n            .then(safetyplans => setSafetyPlans(safetyplans))\n    }, [])\n\n    const [formSubmitted, setFormSubmitted] = useState(false);\n\n\n    const handleSubmit = (event) => {\n        // event.prevent.Default();\n        if (!question1 || !question2 || !question3 || !question4 || !question5) {\n            alert(\"Please fill in answers to all questions. If you wish to leave one blank type in 'None'.\");\n            return;\n        }\n        const new_safety_plan = {\n            email: email,\n            question1: question1,\n            question2: question2,\n            question3: question3,\n            question4: question4,\n            question5: question5\n        }\n\n        fetch('/generate_safety_plan', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            },\n            body: JSON.stringify(new_safety_plan)\n        })\n            .then(response => response.json())\n            .then(new_safety_plan => {\n                setSafetyPlans([...safetyplans, new_safety_plan])\n\n                //form submission confirmation\n                setFormSubmitted(true);\n            });\n    }\n\n    // Send the email data to the backend\n    const emailData = {\n        username: \"Serenity Harbor\",\n        recipient_email: email, // Use the entered email\n        sender_email: \"SerenityHarbor.DefaultEmail@gmail.com\",\n        message: \"Thank you for trusting us. Please see your safety plan below. Keep it in a safe place incase of emergencies\"\n    };\n\n    fetch('/send_email', {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n            'Accept': 'application/json'\n        },\n        body: JSON.stringify(emailData)\n    })\n        .then(response => response.json())\n        .then(data => {\n            console.log(data); \n        })\n        .catch(error => {\n            console.error('Error sending email:', error);\n        });  \n    const handleEmailChange = (event)=>{\n        setEmail(event.target.value);\n    }\n    \n    return (\n        <EmailContext.Provider value={{ email, setEmail }}>\n            <div>\n                {formSubmitted ? (\n            <p>Thank you for your answers. Please see your generated plan below!</p>\n        ) : (\n            <form onSubmit={handleSubmit}>\n                <div>\n                    <label>\n                        Question 1:\n                        <br></br>\n                        Who are your trusted friends, family members, or neighbors that you can reach out to in case of an emergency?\n                        <br></br>\n                        <input\n                            type=\"text\"\n                            name=\"question1\"\n                            value={question1}\n                            onChange={(e) => { setQuestion1(e.target.value) }}\n                        />\n                    </label>\n                </div>\n\n                <div>\n                    <label>\n                        Question 2:\n                        <br></br>\n                        Is there reliable transportation available to you if you need to leave quickly, and if not, who can you rely on for transportation assistance?\n                        <br></br>\n                        <input\n                            type=\"text\"\n                            name=\"question2\"\n                            value={question2}\n                            onChange={(e) => { setQuestion2(e.target.value) }}\n                        />\n                    </label>\n                </div>\n\n                <div>\n                    <label>\n                        Question 3:\n                        <br></br>\n                        List 3 safe location outside your home where you can go if you feel threatened or need to leave quickly?\n                        <br></br>\n                        <input\n                            type=\"text\"\n                            name=\"question3\"\n                            value={question3}\n                            onChange={(e) => { setQuestion3(e.target.value) }}\n                        />\n                    </label>\n                </div>\n\n                <div>\n                    <label>\n                        Question 4:\n                        <br></br>\n                        Who are the people you can trust and confide in about the abuse you're experiencing?\n                        <br></br>\n                        <input\n                            type=\"text\"\n                            name=\"question4\"\n                            value={question4}\n                            onChange={(e) => { setQuestion4(e.target.value) }}\n                        />\n                    </label>\n                </div>\n\n                <div>\n                    <label>\n                        Question 5:\n                        <br></br>\n                        Can you provide a physical description of your abuser, including details such as their gender, age, height, weight, hair color, eye color, and any distinguishing features or tattoos?\n                        <br></br>\n                        <input\n                            type=\"text\"\n                            name=\"question5\"\n                            value={question5}\n                            onChange={(e) => { setQuestion5(e.target.value) }}\n                        />\n                    </label>\n                </div>\n                <div>\n                    <label>\n                        Email a copy of your safetyplan to yourself:\n\n                        <br></br>\n                        <input type='email' name='email' value={email} onChange={handleEmailChange} />\n                    </label>\n                </div>\n                <br></br>\n                <button type=\"submit\">Generate Safety Plan</button>\n                </form>\n            )}\n        </div>\n    </EmailContext.Provider>\n);\n        }\nexport default SafetyPlanForm;","/home/lillian/Development/code/phase-5/s-harbor/project/src/components/Newsletter.js",[],[],"/home/lillian/Development/code/phase-5/s-harbor/project/src/components/NavBar.js",[],[],"/home/lillian/Development/code/phase-5/s-harbor/project/src/components/Consultations.js",["84","85"],[],{"ruleId":"86","severity":1,"message":"87","line":2,"column":10,"nodeType":"88","messageId":"89","endLine":2,"endColumn":23},{"ruleId":"86","severity":1,"message":"90","line":2,"column":40,"nodeType":"88","messageId":"89","endLine":2,"endColumn":51},{"ruleId":"86","severity":1,"message":"91","line":16,"column":10,"nodeType":"88","messageId":"89","endLine":16,"endColumn":29},{"ruleId":"86","severity":1,"message":"92","line":36,"column":11,"nodeType":"88","messageId":"89","endLine":36,"endColumn":23},{"ruleId":"86","severity":1,"message":"93","line":89,"column":11,"nodeType":"88","messageId":"89","endLine":89,"endColumn":29},{"ruleId":"86","severity":1,"message":"94","line":5,"column":7,"nodeType":"88","messageId":"89","endLine":5,"endColumn":19},{"ruleId":"86","severity":1,"message":"95","line":10,"column":9,"nodeType":"88","messageId":"89","endLine":10,"endColumn":23},{"ruleId":"86","severity":1,"message":"96","line":19,"column":9,"nodeType":"88","messageId":"89","endLine":19,"endColumn":27},{"ruleId":"97","severity":1,"message":"98","line":28,"column":5,"nodeType":"99","messageId":"100","endLine":28,"endColumn":14},{"ruleId":"86","severity":1,"message":"92","line":31,"column":9,"nodeType":"88","messageId":"89","endLine":31,"endColumn":21},{"ruleId":"86","severity":1,"message":"101","line":39,"column":9,"nodeType":"88","messageId":"89","endLine":39,"endColumn":23},{"ruleId":"86","severity":1,"message":"102","line":44,"column":9,"nodeType":"88","messageId":"89","endLine":44,"endColumn":29},{"ruleId":"86","severity":1,"message":"103","line":49,"column":9,"nodeType":"88","messageId":"89","endLine":49,"endColumn":20},{"ruleId":"86","severity":1,"message":"104","line":61,"column":9,"nodeType":"88","messageId":"89","endLine":61,"endColumn":29},{"ruleId":"86","severity":1,"message":"105","line":66,"column":9,"nodeType":"88","messageId":"89","endLine":66,"endColumn":19},{"ruleId":"86","severity":1,"message":"106","line":2,"column":8,"nodeType":"88","messageId":"89","endLine":2,"endColumn":19},{"ruleId":"86","severity":1,"message":"107","line":6,"column":7,"nodeType":"88","messageId":"89","endLine":6,"endColumn":22},{"ruleId":"86","severity":1,"message":"108","line":9,"column":12,"nodeType":"88","messageId":"89","endLine":9,"endColumn":17},{"ruleId":"86","severity":1,"message":"109","line":9,"column":19,"nodeType":"88","messageId":"89","endLine":9,"endColumn":27},{"ruleId":"86","severity":1,"message":"110","line":1,"column":17,"nodeType":"88","messageId":"89","endLine":1,"endColumn":26},{"ruleId":"86","severity":1,"message":"111","line":1,"column":28,"nodeType":"88","messageId":"89","endLine":1,"endColumn":36},"no-unused-vars","'BrowserRouter' is defined but never used.","Identifier","unusedVar","'useLocation' is defined but never used.","'completedSafetyPlan' is assigned a value but never used.","'headingStyle' is assigned a value but never used.","'cardContainerStyle' is assigned a value but never used.","'sectionStyle' is assigned a value but never used.","'containerStyle' is assigned a value but never used.","'textContainerStyle' is assigned a value but never used.","no-dupe-keys","Duplicate key 'textAlign'.","ObjectExpression","unexpected","'paragraphStyle' is assigned a value but never used.","'buttonContainerStyle' is assigned a value but never used.","'buttonStyle' is assigned a value but never used.","'secondaryButtonStyle' is assigned a value but never used.","'imageStyle' is assigned a value but never used.","'ConsultForm' is defined but never used.","'useEmailContext' is assigned a value but never used.","'value' is assigned a value but never used.","'setValue' is assigned a value but never used.","'useEffect' is defined but never used.","'useState' is defined but never used."]