[{"/home/lillian/Development/code/phase-5/Serenity-Harbor-Project/project/src/index.js":"1","/home/lillian/Development/code/phase-5/Serenity-Harbor-Project/project/src/App.js":"2","/home/lillian/Development/code/phase-5/Serenity-Harbor-Project/project/src/components/NavBar.js":"3","/home/lillian/Development/code/phase-5/Serenity-Harbor-Project/project/src/components/SafetyPlanForm.js":"4","/home/lillian/Development/code/phase-5/Serenity-Harbor-Project/project/src/components/ConsultForm.js":"5","/home/lillian/Development/code/phase-5/Serenity-Harbor-Project/project/src/components/IdAbuse.js":"6","/home/lillian/Development/code/phase-5/Serenity-Harbor-Project/project/src/components/Testimonials.js":"7","/home/lillian/Development/code/phase-5/Serenity-Harbor-Project/project/src/components/AboutUs.js":"8","/home/lillian/Development/code/phase-5/Serenity-Harbor-Project/project/src/components/Consultations.js":"9","/home/lillian/Development/code/phase-5/Serenity-Harbor-Project/project/src/components/AgencyMain.js":"10","/home/lillian/Development/code/phase-5/Serenity-Harbor-Project/project/src/components/ContactPage.js":"11","/home/lillian/Development/code/phase-5/Serenity-Harbor-Project/project/src/components/Footer.js":"12","/home/lillian/Development/code/phase-5/Serenity-Harbor-Project/project/src/components/Homepage.js":"13","/home/lillian/Development/code/phase-5/Serenity-Harbor-Project/project/src/components/AgencyList.js":"14","/home/lillian/Development/code/phase-5/Serenity-Harbor-Project/project/src/components/AgencyMaps.js":"15","/home/lillian/Development/code/phase-5/Serenity-Harbor-Project/project/src/components/AgencyCard.js":"16","/home/lillian/Development/code/phase-5/Serenity-Harbor-Project/project/src/components/Newsletter.js":"17"},{"size":299,"mtime":1691631442389,"results":"18","hashOfConfig":"19"},{"size":2571,"mtime":1691635186708,"results":"20","hashOfConfig":"19"},{"size":6508,"mtime":1691646826487,"results":"21","hashOfConfig":"19"},{"size":17005,"mtime":1691641415797,"results":"22","hashOfConfig":"19"},{"size":6434,"mtime":1691650964176,"results":"23","hashOfConfig":"19"},{"size":2199,"mtime":1691602006005,"results":"24","hashOfConfig":"19"},{"size":18752,"mtime":1691646778947,"results":"25","hashOfConfig":"19"},{"size":2206,"mtime":1691602006005,"results":"26","hashOfConfig":"19"},{"size":209,"mtime":1691602006005,"results":"27","hashOfConfig":"19"},{"size":1551,"mtime":1691602006005,"results":"28","hashOfConfig":"19"},{"size":1905,"mtime":1691651443996,"results":"29","hashOfConfig":"19"},{"size":1943,"mtime":1691636262688,"results":"30","hashOfConfig":"19"},{"size":8057,"mtime":1691636576888,"results":"31","hashOfConfig":"19"},{"size":740,"mtime":1691602006005,"results":"32","hashOfConfig":"19"},{"size":3634,"mtime":1691631442389,"results":"33","hashOfConfig":"19"},{"size":374,"mtime":1691602006005,"results":"34","hashOfConfig":"19"},{"size":8599,"mtime":1691636262688,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},"epakok",{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"39"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"39"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/lillian/Development/code/phase-5/Serenity-Harbor-Project/project/src/index.js",[],[],[],"/home/lillian/Development/code/phase-5/Serenity-Harbor-Project/project/src/App.js",["90","91","92"],[],"import React, { useEffect, useState } from 'react';\nimport { BrowserRouter, Route, Routes, useLocation } from 'react-router-dom';\nimport NavBar from './components/NavBar';\nimport Homepage from './components/Homepage';\nimport ConsultForm from './components/ConsultForm';\nimport SafetyPlan from './components/SafetyPlanForm';\nimport ContactPage from './components/ContactPage';\nimport Testimonials from './components/Testimonials'\nimport SafetyPlanForm from './components/SafetyPlanForm';\nimport IdAbuse from './components/IdAbuse';\nimport AboutUs from './components/AboutUs';\nimport Consultation from './components/Consultations';\nimport AgencyMain from './components/AgencyMain';\nimport Footer from './components/Footer';\nimport './App.css';\nimport 'tailwindcss/tailwind.css'\n\nfunction App() {\n  const [completedSafetyPlan, setCompletedSafetyPlan] = useState([]);\n  const [newConsultation, setNewConsultation] = useState([])\n\n  useEffect(()=>{\n    fetch ('/consultations')\n    .then (response => response.json())\n    .then (newConsultation =>setNewConsultation(newConsultation))\n  }, [])\n\n  const handleSubmit = (formData) => {\n    fetch('/generate_safety_plan', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(formData),\n\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        setCompletedSafetyPlan(data);\n      })\n  }\n\n  // const location = useLocation();\n  // const isSafetyPlanPage = location.pathname ==='/safety-plan';\n\n  return (\n\n  \n      <div>\n        <NavBar />\n        <Routes>\n          <Route path=\"/\" element={<Homepage />} />\n          <Route path=\"/safety_plan\" element={<SafetyPlan />} />\n          <Route path=\"/contact\" element={<ContactPage />} />\n          <Route path=\"/testimonials\" element={<Testimonials />} />\n          <Route path=\"/id_abuse\" element={<IdAbuse/>}/>\n          <Route path=\"/consultations\" element={<Consultation newConsultation={newConsultation}/>}/>\n          <Route path=\"/agencies\" element={<AgencyMain/>}/>\n          <Route path='/about_us' element={<AboutUs/>}/>\n        </Routes>\n\n{/* Force system to populate information on their own pages */}\n        <Routes>\n        <Route path='/contact'\n          render={()=> <ConsultForm onSubmit={handleSubmit}/>}\n          />\n        <Route  \n        path=\"/safety_plan\"\n          render={() => <SafetyPlanForm onSubmit={handleSubmit} />}\n        />\n    \n\n        </Routes>\n        {/* <NewsletterSignup /> */}\n        <Footer/>\n      </div>\n  \n  );\n}\n\n      export default App;\n","/home/lillian/Development/code/phase-5/Serenity-Harbor-Project/project/src/components/NavBar.js",[],[],"/home/lillian/Development/code/phase-5/Serenity-Harbor-Project/project/src/components/SafetyPlanForm.js",["93","94","95","96","97","98","99","100","101","102","103"],[],"import React, { createContext, useContext, useEffect, useState } from \"react\";\n\nconst EmailContext = createContext();\n\n//this hook will consume the email context\nconst useEmailContext = () => useContext(EmailContext);\n\nfunction SafetyPlanForm() {\n    const [value, setValue] = useState(\"\");\n    const [safetyplans, setSafetyPlans] = useState([]);\n    const [email, setEmail] = useState(\"\");\n    const [question1, setQuestion1] = useState(\"\");\n    const [question2, setQuestion2] = useState(\"\");\n    const [question3, setQuestion3] = useState(\"\");\n    const [question4, setQuestion4] = useState(\"\");\n    const [question5, setQuestion5] = useState(\"\");\n\n    useEffect(() => {\n        fetch(\"/generate_safety_plan\")\n            .then((response) => response.json())\n            .then((safetyplans) => setSafetyPlans(safetyplans));\n    }, []);\n\n    const [formSubmitted, setFormSubmitted] = useState(false);\n\n    const handleSubmit = (event) => {\n        // event.prevent.Default();\n        if (!question1 || !question2 || !question3 || !question4 || !question5) {\n            alert(\n                \"Please fill in answers to all questions. If you wish to leave one blank type in 'None'.\"\n            );\n            return;\n        }\n        const new_safety_plan = {\n            email: email,\n            question1: question1,\n            question2: question2,\n            question3: question3,\n            question4: question4,\n            question5: question5,\n        };\n\n        fetch(\"/generate_safety_plan\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Accept: \"application/json\",\n            },\n            body: JSON.stringify(new_safety_plan),\n        })\n            .then((response) => response.json())\n            .then((new_safety_plan) => {\n                setSafetyPlans([...safetyplans, new_safety_plan]);\n\n                //form submission confirmation\n                setFormSubmitted(true);\n            });\n    };\n\n    // Send the email data to the backend\n    const emailData = {\n        username: \"Serenity Harbor\",\n        recipient_email: email, // Use the entered email\n        sender_email: \"SerenityHarbor.DefaultEmail@gmail.com\",\n        message:\n            \"Thank you for trusting us. Please see your safety plan below. Keep it in a safe place incase of emergencies\",\n    };\n\n    fetch(\"/send_email\", {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/json\",\n            Accept: \"application/json\",\n        },\n        body: JSON.stringify(emailData),\n    })\n        .then((response) => response.json())\n        .then((data) => {\n            console.log(data);\n        })\n        .catch((error) => {\n            console.error(\"Error sending email:\", error);\n        });\n    const handleEmailChange = (event) => {\n        setEmail(event.target.value);\n    };\n\n    return (\n        <section class=\" bg-gradient-to-r from-cyan-500 to-blue-500\">\n            <div\n                id=\"section-1\"\n                className=\"px-4 py-12 mx-auto max-w-7xl sm:px-6 md:px-12 lg:px-24 lg:py-24\"\n            >\n                <div\n                    id=\"div-1\"\n                    className=\"justify-center mx-auto text-left align-bottom transition-all transform bg-white rounded-lg sm:align-middle sm:max-w-2xl sm:w-full\"\n                >\n                    <div\n                        id=\"div-2\"\n                        className=\" items-center justify-center grid-cols-8 mx-auto shadow-xl lg:grid-cols-8 rounded-xl\"\n                    >\n                        <div id=\"div-3\" className=\"w-full px-6 py-3\">\n                            <div id=\"div-4\">\n                                <div id=\"div-5\" className=\"mt-3 text-left sm:mt-5\">\n                                    <div id=\"div-6\" className=\"mt-3\">\n                                        <h3\n                                            id=\"heading-1\"\n                                            className=\"text-lg font-bold text-neutral-600 leading-6 lg:text-5xl text-center\"\n                                        >\n                                            Safety Plan Creator\n                                        </h3>\n                                    </div>\n                                    <div\n                                        id=\"div-7\"\n                                        className=\"mt-3 text-base text-gray-500 text-center\"\n                                    >\n                                        <p>We're Here to Help</p>\n                                    </div>\n                                </div>\n                            </div>\n\n                            <div id=\"div-8\" className=\"mt-6 space-y-2 text-center text-lg\">\n                                <div id=\"div-9\">\n                                    <label text-customTeal>\n                                        1. Who are your trusted friends, family members, or\n                                        neighbors that you can reach out to in case of an emergency?\n                                        Include phone numbers if possible\n                                    </label>\n                                    <textarea\n                                        name=\"message\"\n                                        className=\"h-60 w-full rounded border bg-gray-50 px-3 py-2 text-gray-800 outline-none ring-indigo-300 transition duration-100 focus:ring focus:border-customTeal\"\n                                        placeholder=\"If you have no answer type 'None'\"\n                                    ></textarea>\n                                </div>\n                                <div id=\"div-10 text-lg\">\n                                    <label text-customTeal>\n                                        2. Is there reliable transportation available to you if you\n                                        need to leave quickly, and if not, who can you rely on for\n                                        transportation assistance?\n                                    </label>\n                                    <textarea\n                                        name=\"message\"\n                                        className=\"h-60 w-full rounded border bg-gray-50 px-3 py-2 text-gray-800 outline-none ring-indigo-300 transition duration-100 focus:ring focus:border-customTeal\"\n                                        placeholder=\"If you have no answer type 'None'\"\n                                    ></textarea>\n                                </div>\n                                <div id=\"div-11 text-lg\">\n                                    <label text-customTeal>\n                                        3. List 3 safe location outside your home where you can go\n                                        if you feel threatened or need to leave quickly?\n                                    </label>\n                                    <textarea\n                                        name=\"message\"\n                                        className=\"h-60 w-full rounded border bg-gray-50 px-3 py-2 text-gray-800 outline-none ring-indigo-300 transition duration-100 focus:ring focus:border-customTeal\"\n                                        placeholder=\"If you have no answer type 'None'\"\n                                    ></textarea>\n                                </div>\n                                <div id=\"div-12 text-lg\">\n                                    <label text-customTeal>\n                                        4. Who are the people you can trust and confide in about the\n                                        abuse you're experiencing?\n                                    </label>\n                                    <textarea\n                                        name=\"message\"\n                                        className=\"h-60 w-full rounded border bg-gray-50 px-3 py-2 text-gray-800 outline-none ring-indigo-300 transition duration-100 focus:ring focus:border-customTeal\"\n                                        placeholder=\"If you have no answer type 'None'\"\n                                    ></textarea>\n                                </div>\n                                <div id=\"div-13 text-lg\">\n                                    <label text-customTeal>\n                                        5. Can you provide a physical description of your abuser,\n                                        including details such as their gender, age, height, weight,\n                                        hair color, eye color, and any distinguishing features or\n                                        tattoos?\n                                    </label>\n                                    <textarea\n                                        name=\"message\"\n                                        className=\"h-60 w-full rounded border bg-gray-50 px-3 py-2 text-gray-800 outline-none ring-indigo-300 transition duration-100 focus:ring focus:border-customTeal\"\n                                        placeholder=\"If you have no answer type 'None'\"\n                                    ></textarea>\n                                    <button class=\"inline-block rounded-lg bg-customTeal px-8 py-3 text-center text-sm font-semibold text-white outline-none ring-customLightBlue transition duration-100 hover:bg-customLightBLue focus-visible:ring active:bg-customLightBlue md:text-base\">\n                                        Submit\n                                    </button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </section>\n    );\n}\n\nexport default SafetyPlanForm;\n\n// import React, { createContext, useContext, useEffect, useState } from \"react\";\n\n// const EmailContext = createContext();\n\n// //this hook will consume the email context\n// const useEmailContext = () => useContext(EmailContext);\n\n// function SafetyPlanForm() {\n//     const [value, setValue] = useState(\"\")\n//     const [safetyplans, setSafetyPlans] = useState([])\n//     const [email, setEmail] = useState(\"\")\n//     const [question1, setQuestion1] = useState(\"\")\n//     const [question2, setQuestion2] = useState(\"\")\n//     const [question3, setQuestion3] = useState(\"\")\n//     const [question4, setQuestion4] = useState(\"\")\n//     const [question5, setQuestion5] = useState(\"\")\n\n//     useEffect(() => {\n//         fetch('/generate_safety_plan')\n//             .then(response => response.json())\n//             .then(safetyplans => setSafetyPlans(safetyplans))\n//     }, [])\n\n//     const [formSubmitted, setFormSubmitted] = useState(false);\n\n//     const handleSubmit = (event) => {\n//         // event.prevent.Default();\n//         if (!question1 || !question2 || !question3 || !question4 || !question5) {\n//             alert(\"Please fill in answers to all questions. If you wish to leave one blank type in 'None'.\");\n//             return;\n//         }\n//         const new_safety_plan = {\n//             email: email,\n//             question1: question1,\n//             question2: question2,\n//             question3: question3,\n//             question4: question4,\n//             question5: question5\n//         }\n\n//         fetch('/generate_safety_plan', {\n//             method: 'POST',\n//             headers: {\n//                 'Content-Type': 'application/json',\n//                 'Accept': 'application/json'\n//             },\n//             body: JSON.stringify(new_safety_plan)\n//         })\n//             .then(response => response.json())\n//             .then(new_safety_plan => {\n//                 setSafetyPlans([...safetyplans, new_safety_plan])\n\n//                 //form submission confirmation\n//                 setFormSubmitted(true);\n//             });\n//     }\n\n//     // Send the email data to the backend\n//     const emailData = {\n//         username: \"Serenity Harbor\",\n//         recipient_email: email, // Use the entered email\n//         sender_email: \"SerenityHarbor.DefaultEmail@gmail.com\",\n//         message: \"Thank you for trusting us. Please see your safety plan below. Keep it in a safe place incase of emergencies\"\n//     };\n\n//     fetch('/send_email', {\n//         method: 'POST',\n//         headers: {\n//             'Content-Type': 'application/json',\n//             'Accept': 'application/json'\n//         },\n//         body: JSON.stringify(emailData)\n//     })\n//         .then(response => response.json())\n//         .then(data => {\n//             console.log(data);\n//         })\n//         .catch(error => {\n//             console.error('Error sending email:', error);\n//         });\n//     const handleEmailChange = (event)=>{\n//         setEmail(event.target.value);\n//     }\n\n//     return (\n//         <EmailContext.Provider value={{ email, setEmail }}>\n//             <div>\n//                 {formSubmitted ? (\n//             <p>Thank you for your answers. Please see your generated plan below!</p>\n//         ) : (\n//             <form onSubmit={handleSubmit}>\n//                 <div>\n//                     <label>\n//                         Question 1:\n//                         <br></br>\n//                         Who are your trusted friends, family members, or neighbors that you can reach out to in case of an emergency?\n//                         <br></br>\n//                         <input\n//                             type=\"text\"\n//                             name=\"question1\"\n//                             value={question1}\n//                             onChange={(e) => { setQuestion1(e.target.value) }}\n//                         />\n//                     </label>\n//                 </div>\n\n//                 <div>\n//                     <label>\n//                         Question 2:\n//                         <br></br>\n//                         Is there reliable transportation available to you if you need to leave quickly, and if not, who can you rely on for transportation assistance?\n//                         <br></br>\n//                         <input\n//                             type=\"text\"\n//                             name=\"question2\"\n//                             value={question2}\n//                             onChange={(e) => { setQuestion2(e.target.value) }}\n//                         />\n//                     </label>\n//                 </div>\n\n//                 <div>\n//                     <label>\n//                         Question 3:\n//                         <br></br>\n//                         List 3 safe location outside your home where you can go if you feel threatened or need to leave quickly?\n//                         <br></br>\n//                         <input\n//                             type=\"text\"\n//                             name=\"question3\"\n//                             value={question3}\n//                             onChange={(e) => { setQuestion3(e.target.value) }}\n//                         />\n//                     </label>\n//                 </div>\n\n//                 <div>\n//                     <label>\n//                         Question 4:\n//                         <br></br>\n//                         Who are the people you can trust and confide in about the abuse you're experiencing?\n//                         <br></br>\n//                         <input\n//                             type=\"text\"\n//                             name=\"question4\"\n//                             value={question4}\n//                             onChange={(e) => { setQuestion4(e.target.value) }}\n//                         />\n//                     </label>\n//                 </div>\n\n//                 <div>\n//                     <label>\n//                         Question 5:\n//                         <br></br>\n//                         Can you provide a physical description of your abuser, including details such as their gender, age, height, weight, hair color, eye color, and any distinguishing features or tattoos?\n//                         <br></br>\n//                         <input\n//                             type=\"text\"\n//                             name=\"question5\"\n//                             value={question5}\n//                             onChange={(e) => { setQuestion5(e.target.value) }}\n//                         />\n//                     </label>\n//                 </div>\n//                 <div>\n//                     <label>\n//                         Email a copy of your safetyplan to yourself:\n\n//                         <br></br>\n//                         <input type='email' name='email' value={email} onChange={handleEmailChange} />\n//                     </label>\n//                 </div>\n//                 <br></br>\n//                 <button type=\"submit\">Generate Safety Plan</button>\n//                 </form>\n//             )}\n//         </div>\n//     </EmailContext.Provider>\n// );\n//         }\n// export default SafetyPlanForm;\n","/home/lillian/Development/code/phase-5/Serenity-Harbor-Project/project/src/components/ConsultForm.js",[],[],"/home/lillian/Development/code/phase-5/Serenity-Harbor-Project/project/src/components/IdAbuse.js",[],[],"/home/lillian/Development/code/phase-5/Serenity-Harbor-Project/project/src/components/Testimonials.js",["104","105","106","107","108","109"],[],"/home/lillian/Development/code/phase-5/Serenity-Harbor-Project/project/src/components/AboutUs.js",[],[],"/home/lillian/Development/code/phase-5/Serenity-Harbor-Project/project/src/components/Consultations.js",[],[],"/home/lillian/Development/code/phase-5/Serenity-Harbor-Project/project/src/components/AgencyMain.js",[],[],"/home/lillian/Development/code/phase-5/Serenity-Harbor-Project/project/src/components/ContactPage.js",[],[],"/home/lillian/Development/code/phase-5/Serenity-Harbor-Project/project/src/components/Footer.js",[],[],"/home/lillian/Development/code/phase-5/Serenity-Harbor-Project/project/src/components/Homepage.js",["110","111","112"],[],"/home/lillian/Development/code/phase-5/Serenity-Harbor-Project/project/src/components/AgencyList.js",[],[],"/home/lillian/Development/code/phase-5/Serenity-Harbor-Project/project/src/components/AgencyMaps.js",[],[],"/home/lillian/Development/code/phase-5/Serenity-Harbor-Project/project/src/components/AgencyCard.js",[],[],"/home/lillian/Development/code/phase-5/Serenity-Harbor-Project/project/src/components/Newsletter.js",[],[],{"ruleId":"113","severity":1,"message":"114","line":2,"column":10,"nodeType":"115","messageId":"116","endLine":2,"endColumn":23},{"ruleId":"113","severity":1,"message":"117","line":2,"column":40,"nodeType":"115","messageId":"116","endLine":2,"endColumn":51},{"ruleId":"113","severity":1,"message":"118","line":19,"column":10,"nodeType":"115","messageId":"116","endLine":19,"endColumn":29},{"ruleId":"113","severity":1,"message":"119","line":6,"column":7,"nodeType":"115","messageId":"116","endLine":6,"endColumn":22},{"ruleId":"113","severity":1,"message":"120","line":9,"column":12,"nodeType":"115","messageId":"116","endLine":9,"endColumn":17},{"ruleId":"113","severity":1,"message":"121","line":9,"column":19,"nodeType":"115","messageId":"116","endLine":9,"endColumn":27},{"ruleId":"113","severity":1,"message":"122","line":12,"column":23,"nodeType":"115","messageId":"116","endLine":12,"endColumn":35},{"ruleId":"113","severity":1,"message":"123","line":13,"column":23,"nodeType":"115","messageId":"116","endLine":13,"endColumn":35},{"ruleId":"113","severity":1,"message":"124","line":14,"column":23,"nodeType":"115","messageId":"116","endLine":14,"endColumn":35},{"ruleId":"113","severity":1,"message":"125","line":15,"column":23,"nodeType":"115","messageId":"116","endLine":15,"endColumn":35},{"ruleId":"113","severity":1,"message":"126","line":16,"column":23,"nodeType":"115","messageId":"116","endLine":16,"endColumn":35},{"ruleId":"113","severity":1,"message":"127","line":24,"column":12,"nodeType":"115","messageId":"116","endLine":24,"endColumn":25},{"ruleId":"113","severity":1,"message":"128","line":26,"column":11,"nodeType":"115","messageId":"116","endLine":26,"endColumn":23},{"ruleId":"113","severity":1,"message":"129","line":84,"column":11,"nodeType":"115","messageId":"116","endLine":84,"endColumn":28},{"ruleId":"130","severity":1,"message":"131","line":174,"column":11,"nodeType":"132","endLine":174,"endColumn":151},{"ruleId":"130","severity":1,"message":"131","line":199,"column":11,"nodeType":"132","endLine":199,"endColumn":156},{"ruleId":"130","severity":1,"message":"131","line":222,"column":11,"nodeType":"132","endLine":222,"endColumn":154},{"ruleId":"130","severity":1,"message":"131","line":248,"column":11,"nodeType":"132","endLine":248,"endColumn":158},{"ruleId":"130","severity":1,"message":"131","line":271,"column":11,"nodeType":"132","endLine":271,"endColumn":208},{"ruleId":"130","severity":1,"message":"131","line":292,"column":11,"nodeType":"132","endLine":292,"endColumn":213},{"ruleId":"113","severity":1,"message":"133","line":46,"column":11,"nodeType":"115","messageId":"116","endLine":46,"endColumn":23},{"ruleId":"113","severity":1,"message":"134","line":55,"column":11,"nodeType":"115","messageId":"116","endLine":55,"endColumn":25},{"ruleId":"113","severity":1,"message":"135","line":99,"column":11,"nodeType":"115","messageId":"116","endLine":99,"endColumn":29},"no-unused-vars","'BrowserRouter' is defined but never used.","Identifier","unusedVar","'useLocation' is defined but never used.","'completedSafetyPlan' is assigned a value but never used.","'useEmailContext' is assigned a value but never used.","'value' is assigned a value but never used.","'setValue' is assigned a value but never used.","'setQuestion1' is assigned a value but never used.","'setQuestion2' is assigned a value but never used.","'setQuestion3' is assigned a value but never used.","'setQuestion4' is assigned a value but never used.","'setQuestion5' is assigned a value but never used.","'formSubmitted' is assigned a value but never used.","'handleSubmit' is assigned a value but never used.","'handleEmailChange' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'headingStyle' is assigned a value but never used.","'paragraphStyle' is assigned a value but never used.","'cardContainerStyle' is assigned a value but never used."]