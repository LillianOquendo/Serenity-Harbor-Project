[{"/home/lillian/Development/code/phase-5/s-harbor/project/src/index.js":"1","/home/lillian/Development/code/phase-5/s-harbor/project/src/App.js":"2","/home/lillian/Development/code/phase-5/s-harbor/project/src/reportWebVitals.js":"3","/home/lillian/Development/code/phase-5/s-harbor/project/src/components/Homepage.js":"4","/home/lillian/Development/code/phase-5/s-harbor/project/src/components/Testimonials.js":"5","/home/lillian/Development/code/phase-5/s-harbor/project/src/components/ContactPage.js":"6","/home/lillian/Development/code/phase-5/s-harbor/project/src/components/ConsultForm.js":"7","/home/lillian/Development/code/phase-5/s-harbor/project/src/components/IdAbuse.js":"8","/home/lillian/Development/code/phase-5/s-harbor/project/src/components/SafetyPlanForm.js":"9","/home/lillian/Development/code/phase-5/s-harbor/project/src/components/Newsletter.js":"10","/home/lillian/Development/code/phase-5/s-harbor/project/src/components/NavBar.js":"11","/home/lillian/Development/code/phase-5/s-harbor/project/src/components/Consultations.js":"12"},{"size":579,"mtime":1690949338671,"results":"13","hashOfConfig":"14"},{"size":2314,"mtime":1691095732965,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":1690949338671,"results":"16","hashOfConfig":"14"},{"size":137,"mtime":1691459094650,"results":"17","hashOfConfig":"14"},{"size":1311,"mtime":1691459094650,"results":"18","hashOfConfig":"14"},{"size":574,"mtime":1691083234266,"results":"19","hashOfConfig":"14"},{"size":6435,"mtime":1691184430582,"results":"20","hashOfConfig":"14"},{"size":2199,"mtime":1690949338671,"results":"21","hashOfConfig":"14"},{"size":6745,"mtime":1691183676692,"results":"22","hashOfConfig":"14"},{"size":2047,"mtime":1691459094650,"results":"23","hashOfConfig":"14"},{"size":2420,"mtime":1691459094650,"results":"24","hashOfConfig":"14"},{"size":234,"mtime":1691083508876,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},"2mmjkg",{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"29"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"29"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"29"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"29"},"/home/lillian/Development/code/phase-5/s-harbor/project/src/index.js",[],[],[],"/home/lillian/Development/code/phase-5/s-harbor/project/src/App.js",["67","68","69"],[],"import React, { useEffect, useState } from 'react';\nimport { BrowserRouter, Route, Routes, useLocation } from 'react-router-dom';\nimport NavBar from './components/NavBar';\nimport Homepage from './components/Homepage';\nimport ConsultForm from './components/ConsultForm';\nimport SafetyPlan from './components/SafetyPlanForm';\nimport ContactPage from './components/ContactPage';\nimport Testimonials from './components/Testimonials'\nimport SafetyPlanForm from './components/SafetyPlanForm';\nimport IdAbuse from './components/IdAbuse';\nimport NewsletterSignup from './components/Newsletter';\nimport Consultation from './components/Consultations';\nimport './App.css';\n\nfunction App() {\n  const [completedSafetyPlan, setCompletedSafetyPlan] = useState([]);\n  const [newConsultation, setNewConsultation] = useState([])\n\n  useEffect(()=>{\n    fetch ('/consultations')\n    .then (response => response.json())\n    .then (newConsultation =>setNewConsultation(newConsultation))\n  }, [])\n\n  const handleSubmit = (formData) => {\n    fetch('/generate_safety_plan', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(formData),\n\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        setCompletedSafetyPlan(data);\n      })\n  }\n\n  // const location = useLocation();\n  // const isSafetyPlanPage = location.pathname ==='/safety-plan';\n\n  return (\n\n  \n      <div>\n        <NavBar />\n        <Routes>\n          <Route path=\"/\" element={<Homepage />} />\n          <Route path=\"/safety_plan\" element={<SafetyPlan />} />\n          <Route path=\"/contact\" element={<ContactPage />} />\n          <Route path=\"/testimonials\" element={<Testimonials />} />\n          <Route path=\"/id_abuse\" element={<IdAbuse/>}/>\n          <Route path=\"/consultations\" element={<Consultation newConsultation={newConsultation}/>}/>\n        </Routes>\n\n{/* Force system to populate information on their own pages */}\n        <Routes>\n        <Route path='/contact'\n          render={()=> <ConsultForm onSubmit={handleSubmit}/>}\n          />\n        <Route  \n        path=\"/safety_plan\"\n          render={() => <SafetyPlanForm onSubmit={handleSubmit} />}\n        />\n    \n\n        </Routes>\n        <NewsletterSignup />\n      </div>\n  \n  );\n}\n\n      export default App;\n","/home/lillian/Development/code/phase-5/s-harbor/project/src/reportWebVitals.js",[],[],"/home/lillian/Development/code/phase-5/s-harbor/project/src/components/Homepage.js",[],[],"/home/lillian/Development/code/phase-5/s-harbor/project/src/components/Testimonials.js",[],[],"/home/lillian/Development/code/phase-5/s-harbor/project/src/components/ContactPage.js",["70"],[],"import React from \"react\";\nimport ConsultForm from \"./ConsultForm\";\n\nfunction Contact() {\n    const phoneNumber = '123-456-7891';\n    const address = '11 Broadway, New York, NY 10004';\n    const email = 'SerenityHarbor@randomsite.com'\n\n\n    return (\n        <div>\n            \n            <h2 className=\"text-7xl text-center\" >Contact Us</h2>\n            <p>Phone: {phoneNumber}</p>\n            <p>Address: {address}</p>\n            <p>Email: {email}</p>\n            <br></br>\n            <br></br>\n            \n            \n        </div>\n    )\n}\n//\n\nexport default Contact","/home/lillian/Development/code/phase-5/s-harbor/project/src/components/ConsultForm.js",[],[],"/home/lillian/Development/code/phase-5/s-harbor/project/src/components/IdAbuse.js",[],[],"/home/lillian/Development/code/phase-5/s-harbor/project/src/components/SafetyPlanForm.js",["71","72","73"],[],"import React, { createContext, useContext, useEffect, useState } from \"react\";\n\nconst EmailContext = createContext();\n\n//this hook will consume the email context\nconst useEmailContext = () => useContext(EmailContext);\n\nfunction SafetyPlanForm() {\n    const [value, setValue] = useState(\"\")\n    const [safetyplans, setSafetyPlans] = useState([])\n    const [email, setEmail] = useState(\"\")\n    const [question1, setQuestion1] = useState(\"\")\n    const [question2, setQuestion2] = useState(\"\")\n    const [question3, setQuestion3] = useState(\"\")\n    const [question4, setQuestion4] = useState(\"\")\n    const [question5, setQuestion5] = useState(\"\")\n\n    useEffect(() => {\n        fetch('/generate_safety_plan')\n            .then(response => response.json())\n            .then(safetyplans => setSafetyPlans(safetyplans))\n    }, [])\n\n    const [formSubmitted, setFormSubmitted] = useState(false);\n\n\n    const handleSubmit = (event) => {\n        // event.prevent.Default();\n        if (!question1 || !question2 || !question3 || !question4 || !question5) {\n            alert(\"Please fill in answers to all questions. If you wish to leave one blank type in 'None'.\");\n            return;\n        }\n        const new_safety_plan = {\n            email: email,\n            question1: question1,\n            question2: question2,\n            question3: question3,\n            question4: question4,\n            question5: question5\n        }\n\n        fetch('/generate_safety_plan', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            },\n            body: JSON.stringify(new_safety_plan)\n        })\n            .then(response => response.json())\n            .then(new_safety_plan => {\n                setSafetyPlans([...safetyplans, new_safety_plan])\n\n                //form submission confirmation\n                setFormSubmitted(true);\n            });\n    }\n\n    // Send the email data to the backend\n    const emailData = {\n        username: \"Serenity Harbor\",\n        recipient_email: email, // Use the entered email\n        sender_email: \"SerenityHarbor.DefaultEmail@gmail.com\",\n        message: \"Thank you for trusting us. Please see your safety plan below. Keep it in a safe place incase of emergencies\"\n    };\n\n    fetch('/send_email', {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n            'Accept': 'application/json'\n        },\n        body: JSON.stringify(emailData)\n    })\n        .then(response => response.json())\n        .then(data => {\n            console.log(data); \n        })\n        .catch(error => {\n            console.error('Error sending email:', error);\n        });  \n    const handleEmailChange = (event)=>{\n        setEmail(event.target.value);\n    }\n    \n    return (\n        <EmailContext.Provider value={{ email, setEmail }}>\n            <div>\n                {formSubmitted ? (\n            <p>Thank you for your answers. Please see your generated plan below!</p>\n        ) : (\n            <form onSubmit={handleSubmit}>\n                <div>\n                    <label>\n                        Question 1:\n                        <br></br>\n                        Who are your trusted friends, family members, or neighbors that you can reach out to in case of an emergency?\n                        <br></br>\n                        <input\n                            type=\"text\"\n                            name=\"question1\"\n                            value={question1}\n                            onChange={(e) => { setQuestion1(e.target.value) }}\n                        />\n                    </label>\n                </div>\n\n                <div>\n                    <label>\n                        Question 2:\n                        <br></br>\n                        Is there reliable transportation available to you if you need to leave quickly, and if not, who can you rely on for transportation assistance?\n                        <br></br>\n                        <input\n                            type=\"text\"\n                            name=\"question2\"\n                            value={question2}\n                            onChange={(e) => { setQuestion2(e.target.value) }}\n                        />\n                    </label>\n                </div>\n\n                <div>\n                    <label>\n                        Question 3:\n                        <br></br>\n                        List 3 safe location outside your home where you can go if you feel threatened or need to leave quickly?\n                        <br></br>\n                        <input\n                            type=\"text\"\n                            name=\"question3\"\n                            value={question3}\n                            onChange={(e) => { setQuestion3(e.target.value) }}\n                        />\n                    </label>\n                </div>\n\n                <div>\n                    <label>\n                        Question 4:\n                        <br></br>\n                        Who are the people you can trust and confide in about the abuse you're experiencing?\n                        <br></br>\n                        <input\n                            type=\"text\"\n                            name=\"question4\"\n                            value={question4}\n                            onChange={(e) => { setQuestion4(e.target.value) }}\n                        />\n                    </label>\n                </div>\n\n                <div>\n                    <label>\n                        Question 5:\n                        <br></br>\n                        Can you provide a physical description of your abuser, including details such as their gender, age, height, weight, hair color, eye color, and any distinguishing features or tattoos?\n                        <br></br>\n                        <input\n                            type=\"text\"\n                            name=\"question5\"\n                            value={question5}\n                            onChange={(e) => { setQuestion5(e.target.value) }}\n                        />\n                    </label>\n                </div>\n                <div>\n                    <label>\n                        Email a copy of your safetyplan to yourself:\n\n                        <br></br>\n                        <input type='email' name='email' value={email} onChange={handleEmailChange} />\n                    </label>\n                </div>\n                <br></br>\n                <button type=\"submit\">Generate Safety Plan</button>\n                </form>\n            )}\n        </div>\n    </EmailContext.Provider>\n);\n        }\nexport default SafetyPlanForm;","/home/lillian/Development/code/phase-5/s-harbor/project/src/components/Newsletter.js",[],[],"/home/lillian/Development/code/phase-5/s-harbor/project/src/components/NavBar.js",[],[],"/home/lillian/Development/code/phase-5/s-harbor/project/src/components/Consultations.js",["74","75"],[],"import React, { useEffect, useState } from 'react';\nimport ConsultForm from './ConsultForm';\n\nfunction Consultations(){\n    \n    return (\n        <div>\n            <ConsultForm/>\n        </div>\n    );\n};\n\nexport default Consultations;",{"ruleId":"76","severity":1,"message":"77","line":2,"column":10,"nodeType":"78","messageId":"79","endLine":2,"endColumn":23},{"ruleId":"76","severity":1,"message":"80","line":2,"column":40,"nodeType":"78","messageId":"79","endLine":2,"endColumn":51},{"ruleId":"76","severity":1,"message":"81","line":16,"column":10,"nodeType":"78","messageId":"79","endLine":16,"endColumn":29},{"ruleId":"76","severity":1,"message":"82","line":2,"column":8,"nodeType":"78","messageId":"79","endLine":2,"endColumn":19},{"ruleId":"76","severity":1,"message":"83","line":6,"column":7,"nodeType":"78","messageId":"79","endLine":6,"endColumn":22},{"ruleId":"76","severity":1,"message":"84","line":9,"column":12,"nodeType":"78","messageId":"79","endLine":9,"endColumn":17},{"ruleId":"76","severity":1,"message":"85","line":9,"column":19,"nodeType":"78","messageId":"79","endLine":9,"endColumn":27},{"ruleId":"76","severity":1,"message":"86","line":1,"column":17,"nodeType":"78","messageId":"79","endLine":1,"endColumn":26},{"ruleId":"76","severity":1,"message":"87","line":1,"column":28,"nodeType":"78","messageId":"79","endLine":1,"endColumn":36},"no-unused-vars","'BrowserRouter' is defined but never used.","Identifier","unusedVar","'useLocation' is defined but never used.","'completedSafetyPlan' is assigned a value but never used.","'ConsultForm' is defined but never used.","'useEmailContext' is assigned a value but never used.","'value' is assigned a value but never used.","'setValue' is assigned a value but never used.","'useEffect' is defined but never used.","'useState' is defined but never used."]